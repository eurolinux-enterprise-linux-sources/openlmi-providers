/*
 * Copyright (C) 2013-2014 Red Hat, Inc.  All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * Authors: Tomas Smetana <tsmetana@redhat.com>
 *          Peter Schiffer <pschiffe@redhat.com>
 */

/******************************************************************************
 * Processor
 */

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_Processor") ]
class LMI_Processor: CIM_Processor
{
    [ Implemented(true), Description("System architecture.") ]
    string Architecture;

    /* Added "Multi-Core" characteristic from dmidecode program. */
    [ Implemented(true), Override("Characteristics"),
    ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9..32567",
        "32568", "32569..65535" },
    Values { "Unknown", "DMTF Reserved", "64-bit Capable", "32-bit Capable",
        "Enhanced Virtualization", "Hardware Thread", "NX-bit",
        "Power/Performance Control", "Core Frequency Boosting",
        "DMTF Reserved", "Multi-Core", "Vendor Reserved" } ]
    uint16 Characteristics[];

    /* Flag IDs and names are based on:
       linux-3.8/arch/x86/include/asm/cpufeature.h */
    [ Implemented(true), Description("Flags supported by Processor. "
        "(Available only for x86 architecture.)"),
    ValueMap {
        /* 0*32 */
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "11", "12", "13",
        "14", "15", "16", "17", "18", "19", "21", "22", "23", "24", "25", "26",
        "27", "28", "29", "30", "31",
        /* 1*32 */
        "43", "51", "52", "54", "57", "58", "59", "61", "62", "63",
        /* 2*32 */
        "64", "65", "67",
        /* 3*32 */
        "96", "97", "98", "99", "100", "101", "102", "103", "104", "105",
        "106", "107", "108", "109", "110", "111", "112", "113", "114", "115",
        "116", "118", "119", "120", "121", "122", "123", "124", "125",
        /* 4*32 */
        "128", "129", "130", "131", "132", "133", "134", "135", "136", "137",
        "138", "140", "141", "142", "143", "145", "146", "147", "148", "149",
        "150", "151", "152", "153", "154", "155", "156", "157", "158", "159",
        /* 5*32 */
        "162", "163", "166", "167", "168", "169", "170", "171", "172", "173",
        /* 6*32 */
        "192", "193", "194", "195", "196", "197", "198", "199", "200", "201",
        "202", "203", "204", "205", "207", "208", "209", "211", "213", "214",
        "215",
        /* 7*32 */
        "224", "225", "226", "227", "228", "229", "230", "231", "232",
        /* 8*32 */
        "256", "257", "258", "259", "260", "261", "262", "263", "264", "265",
        "266", "267", "268", "269", "270",
        /* 9*32 */
        "288", "289", "291", "292", "293", "295", "296", "297", "298", "299",
        "306", "307", "308" },
    Values {
        /* 0*32 */
        "fpu", "vme", "de", "pse", "tsc", "msr", "pae", "mce", "cx8", "apic",
        "sep", "mtrr", "pge", "mca", "cmov", "pat", "pse36", "pn", "clflush",
        "dts", "acpi", "mmx", "fxsr", "sse", "sse2", "ss", "ht", "tm", "ia64",
        "pbe",
        /* 1*32 */
        "syscall", "mp", "nx", "mmxext", "fxsr_opt", "pdpe1gb", "rdtscp", "lm",
        "3dnowext", "3dnow",
        /* 2*32 */
        "recovery", "longrun", "lrti",
        /* 3*32 */
        "cxmmx", "k6_mtrr", "cyrix_arr", "centaur_mcr", "k8", "k7", "p3", "p4",
        "constant_tsc", "up", "fxsave_leak", "arch_perfmon", "pebs", "bts",
        "syscall32", "sysenter32", "rep_good", "mfence_rdtsc", "lfence_rdtsc",
        "11ap", "nopl", "xtopology", "tsc_reliable", "nonstop_tsc",
        "clflush_monitor", "extd_apicid", "amd_dcm", "aperfmperf", "eagerfpu",
        /* 4*32 */
        "pni", "pclmulqdq", "dtes64", "monitor", "ds_cpl", "vmx", "smx", "est",
        "tm2", "ssse3", "cid", "fma", "cx16", "xtpr", "pdcm", "pcid", "dca",
        "sse4_1", "sse4_2", "x2apic", "movbe", "popcnt", "tsc_deadline_timer",
        "aes", "xsave", "osxsave", "avx", "f16c", "rdrand", "hypervisor",
        /* 5*32 */
        "rng", "rng_en", "ace", "ace_en", "ace2","ace2_en", "phe", "phe_en",
        "pmm", "pmm_en",
        /* 6*32 */
        "lahf_lm", "cmp_legacy", "svm", "extapic", "cr8_legacy", "abm",
        "sse4a", "misalignsse", "3dnowprefetch", "osvw", "ibs", "xop",
        "skinit", "wdt", "lwp", "fma4", "tce", "nodeid_msr", "tbm", "topoext",
        "perfctr_core",
        /* 7*32 */
        "ida", "arat", "cpb", "epb", "xsaveopt", "pln", "pts", "dtherm",
        "hw_pstate",
        /* 8*32 */
        "tpr_shadow", "vnmi", "flexpriority", "ept", "vpid", "npt", "lbrv",
        "svm_lock", "nrip_save", "tsc_scale", "vmcb_clean", "flushbyasid",
        "decodeassists", "pausefilter", "pfthreshold",
        /* 9*32 */
        "fsgsbase", "tsc_adjust", "bmi1", "hle", "avx2", "smep", "bmi2",
        "erms", "invpcid", "rtm", "rdseed", "adx", "smap" } ]
    uint16 Flags[];

    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("Family") ]
    uint16 Family;

    [ Implemented(true), Override("OtherFamilyDescription") ]
    string OtherFamilyDescription;

    [ Implemented(true), Override("UpgradeMethod") ]
    uint16 UpgradeMethod;

    [ Implemented(true), Override("Role") ]
    string Role;

    [ Implemented(true), Override("EnabledProcessorCharacteristics") ]
    uint16 EnabledProcessorCharacteristics[];

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("CPUStatus") ]
    uint16 CPUStatus;

    [ Implemented(true), Override("EnabledState") ]
    uint16 EnabledState;

    [ Implemented(true), Override("NumberOfEnabledCores") ]
    uint16 NumberOfEnabledCores;

    [ Implemented(true), Override("CurrentClockSpeed") ]
    uint32 CurrentClockSpeed;

    [ Implemented(true), Override("MaxClockSpeed") ]
    uint32 MaxClockSpeed;

    [ Implemented(true), Override("ExternalBusClockSpeed") ]
    uint32 ExternalBusClockSpeed;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("UniqueID") ]
    string UniqueID;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Stepping") ]
    string Stepping;

    [ Implemented(true), Override("DataWidth") ]
    uint16 DataWidth;

    [ Implemented(true), Override("AddressWidth") ]
    uint16 AddressWidth;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ProcessorCapabilities") ]
class LMI_ProcessorCapabilities: CIM_ProcessorCapabilities
{
    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("NumberOfProcessorCores") ]
    uint16 NumberOfProcessorCores;

    [ Implemented(true), Override("NumberOfHardwareThreads") ]
    uint16 NumberOfHardwareThreads;

    [ Implemented(true), Override("ElementNameEditSupported") ]
    boolean ElementNameEditSupported;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ProcessorElementCapabilities"), Association ]
class LMI_ProcessorElementCapabilities: CIM_ElementCapabilities
{
    [ Override("ManagedElement") ]
    LMI_Processor REF ManagedElement;

    [ Override("Capabilities") ]
    LMI_ProcessorCapabilities REF Capabilities;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ProcessorCacheMemory") ]
class LMI_ProcessorCacheMemory: CIM_Memory
{
    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("BlockSize") ]
    uint64 BlockSize;

    [ Implemented(true), Override("Volatile") ]
    boolean Volatile;

    [ Implemented(true), Override("Access") ]
    uint16 Access;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("IsCompressed") ]
    boolean IsCompressed;

    [ Implemented(true), Override("Purpose") ]
    string Purpose;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("NumberOfBlocks") ]
    uint64 NumberOfBlocks;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("EnabledState") ]
    uint16 EnabledState;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_AssociatedProcessorCacheMemory"), Association ]
class LMI_AssociatedProcessorCacheMemory: CIM_AssociatedCacheMemory
{
    [ Override("Antecedent") ]
    LMI_ProcessorCacheMemory REF Antecedent;

    [ Override("Dependent") ]
    LMI_Processor REF Dependent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ProcessorChip") ]
class LMI_ProcessorChip: CIM_Chip
{
    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("Model") ]
    string Model;

    [ Implemented(true), Override("SerialNumber") ]
    string SerialNumber;

    [ Implemented(true), Override("PartNumber") ]
    string PartNumber;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("Name") ]
    string Name;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ProcessorChipRealizes"), Association ]
class LMI_ProcessorChipRealizes: CIM_Realizes
{
    [ Override("Antecedent") ]
    LMI_ProcessorChip REF Antecedent;

    [ Override("Dependent") ]
    LMI_Processor REF Dependent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ProcessorSystemDevice"), Association ]
class LMI_ProcessorSystemDevice: CIM_SystemDevice
{
    [ Override("GroupComponent") ]
    CIM_ComputerSystem REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_Processor REF PartComponent;
};

/******************************************************************************
 * Memory
 */

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_Memory") ]
class LMI_Memory: CIM_Memory
{
    [ Implemented(true), Description("Indicates whether memory has NUMA layout.") ]
    boolean HasNUMA;

    [ Implemented(true), Description("Standard memory page size in kB."),
      Units("Kilobytes"), PUnit("kilobyte") ]
    uint32 StandardMemoryPageSize;

    [ Implemented(true), Description("All supported huge memory page sizes in "
        "currently running kernel in kB."),
      Units("Kilobytes"), PUnit("kilobyte") ]
    uint32 SupportedHugeMemoryPageSizes[];

    [ Implemented(true), Description("Current state of the transparent huge "
        "memory pages. The state can be \"Unsupported\", what means that the "
        "feature is not available on the system, \"Never\" when the feature is "
        "disabled, \"Madvise\" when huge pages are used only in marked memory "
        "area or \"Always\" when this feature is used all the time. "),
    ValueMap { "0", "1", "2", "3" },
    Values { "Unsupported", "Never", "Madvise", "Always" } ]
    uint16 TransparentHugeMemoryPageStatus;

    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("BlockSize") ]
    uint64 BlockSize;

    [ Implemented(true), Override("Volatile") ]
    boolean Volatile;

    [ Implemented(true), Override("Access") ]
    uint16 Access;

    [ Implemented(true), Override("EnabledState") ]
    uint16 EnabledState;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("IsCompressed") ]
    boolean IsCompressed;

    [ Implemented(true), Override("Purpose") ]
    string Purpose;

    [ Implemented(true), Override("NumberOfBlocks") ]
    uint64 NumberOfBlocks;

    [ Implemented(true), Override("ConsumableBlocks") ]
    uint64 ConsumableBlocks;

    [ Implemented(true), Override("StartingAddress") ]
    uint64 StartingAddress;

    [ Implemented(true), Override("EndingAddress") ]
    uint64 EndingAddress;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PhysicalMemory") ]
class LMI_PhysicalMemory: CIM_PhysicalMemory
{
    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("Capacity") ]
    uint64 Capacity;

    [ Implemented(true), Override("FormFactor") ]
    uint16 FormFactor;

    [ Implemented(true), Override("MemoryType") ]
    uint16 MemoryType;

    [ Implemented(true), Override("Speed") ]
    uint32 Speed;

    [ Implemented(true), Override("BankLabel") ]
    string BankLabel;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("SerialNumber") ]
    string SerialNumber;

    [ Implemented(true), Override("PartNumber") ]
    string PartNumber;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("ConfiguredMemoryClockSpeed") ]
    uint32 ConfiguredMemoryClockSpeed;

    [ Implemented(true), Override("TotalWidth") ]
    uint16 TotalWidth;

    [ Implemented(true), Override("DataWidth") ]
    uint16 DataWidth;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PhysicalMemoryRealizes"), Association ]
class LMI_PhysicalMemoryRealizes: CIM_Realizes
{
    [ Override("Antecedent") ]
    LMI_PhysicalMemory REF Antecedent;

    [ Override("Dependent") ]
    LMI_Memory REF Dependent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_MemorySystemDevice"), Association ]
class LMI_MemorySystemDevice: CIM_SystemDevice
{
    [ Override("GroupComponent") ]
    CIM_ComputerSystem REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_Memory REF PartComponent;
};

/******************************************************************************
 * Physical Asset
 */

[ Version("0.3.0"), Provider("cmpi:cmpiLMI_Chassis") ]
class LMI_Chassis: CIM_Chassis
{
    [ Implemented(true), Description("Product name.") ]
    string ProductName;

    [ Implemented(true), Description("UUID.") ]
    string UUID;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("PackageType") ]
    uint16 PackageType;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("ChassisPackageType") ]
    uint16 ChassisPackageType;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("SerialNumber") ]
    string SerialNumber;

    [ Implemented(true), Override("SKU") ]
    string SKU;

    [ Implemented(true), Override("Version") ]
    string Version;

    [ Implemented(true), Override("LockPresent") ]
    boolean LockPresent;

    [ Implemented(true), Override("Model") ]
    string Model;

    [ Implemented(true), Override("NumberOfPowerCords") ]
    uint16 NumberOfPowerCords;

    [ Implemented(true), Description("Type of virtualization technology.") ]
    string VirtualMachine;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_Baseboard") ]
class LMI_Baseboard: CIM_Card
{
    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("PackageType") ]
    uint16 PackageType;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("HostingBoard") ]
    boolean HostingBoard;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("Model") ]
    string Model;

    [ Implemented(true), Override("SerialNumber") ]
    string SerialNumber;

    [ Implemented(true), Override("Version") ]
    string Version;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_BaseboardContainer"), Association ]
class LMI_BaseboardContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_Chassis REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_Baseboard REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ProcessorChipContainer"), Association ]
class LMI_ProcessorChipContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_Chassis REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_ProcessorChip REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_ChassisComputerSystemPackage"), Association ]
class LMI_ChassisComputerSystemPackage: CIM_ComputerSystemPackage
{
    [ Override("Antecedent") ]
    LMI_Chassis REF Antecedent;

    [ Override("Dependent") ]
    CIM_ComputerSystem REF Dependent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_MemorySlot") ]
class LMI_MemorySlot: CIM_Slot
{
    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("ConnectorLayout") ]
    uint16 ConnectorLayout;

    [ Implemented(true), Override("ConnectorGender") ]
    uint16 ConnectorGender;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("Number") ]
    uint16 Number;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_MemorySlotContainer"), Association ]
class LMI_MemorySlotContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_Chassis REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_MemorySlot REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_MemoryPhysicalPackage") ]
class LMI_MemoryPhysicalPackage: CIM_PhysicalPackage
{
    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("PackageType") ]
    uint16 PackageType;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("SerialNumber") ]
    string SerialNumber;

    [ Implemented(true), Override("PartNumber") ]
    string PartNumber;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_MemoryPhysicalPackageInConnector"), Association ]
class LMI_MemoryPhysicalPackageInConnector: CIM_PackageInConnector
{
    [ Override("Antecedent") ]
    LMI_MemorySlot REF Antecedent;

    [ Override("Dependent") ]
    LMI_MemoryPhysicalPackage REF Dependent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PhysicalMemoryContainer"), Association ]
class LMI_PhysicalMemoryContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_MemoryPhysicalPackage REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_PhysicalMemory REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PortPhysicalConnector") ]
class LMI_PortPhysicalConnector: CIM_PhysicalConnector
{
    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("ConnectorLayout") ]
    uint16 ConnectorLayout;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("ConnectorDescription") ]
    string ConnectorDescription;

    [ Implemented(true), Override("ConnectorGender") ]
    uint16 ConnectorGender;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PortPhysicalConnectorContainer"), Association ]
class LMI_PortPhysicalConnectorContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_Chassis REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_PortPhysicalConnector REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_SystemSlot") ]
class LMI_SystemSlot: CIM_Slot
{
    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("ConnectorGender") ]
    uint16 ConnectorGender;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("Number") ]
    uint16 Number;

    [ Implemented(true), Override("ConnectorLayout") ]
    uint16 ConnectorLayout;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("ConnectorDescription") ]
    string ConnectorDescription;

    [ Implemented(true), Override("MaxDataWidth") ]
    uint16 MaxDataWidth;

    [ Implemented(true), Override("MaxLinkWidth") ]
    uint16 MaxLinkWidth;

    [ Implemented(true), Override("SupportsHotPlug") ]
    boolean SupportsHotPlug;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_SystemSlotContainer"), Association ]
class LMI_SystemSlotContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_Chassis REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_SystemSlot REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PointingDevice") ]
class LMI_PointingDevice: CIM_PointingDevice
{
    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("NumberOfButtons") ]
    uint8 NumberOfButtons;

    [ Implemented(true), Override("PointingType") ]
    uint16 PointingType;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;
};

/******************************************************************************
 * Battery
 */

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_Battery") ]
class LMI_Battery: CIM_Battery
{
    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("Chemistry") ]
    uint16 Chemistry;

    [ Implemented(true), Override("DesignCapacity") ]
    uint32 DesignCapacity;

    [ Implemented(true), Override("DesignVoltage") ]
    uint64 DesignVoltage;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_BatteryPhysicalPackage") ]
class LMI_BatteryPhysicalPackage: CIM_PhysicalPackage
{
    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("PackageType") ]
    uint16 PackageType;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("SerialNumber") ]
    string SerialNumber;

    [ Implemented(true), Override("Version") ]
    string Version;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("ManufactureDate") ]
    datetime ManufactureDate;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PhysicalBatteryRealizes"), Association ]
class LMI_PhysicalBatteryRealizes: CIM_Realizes
{
    [ Override("Antecedent") ]
    LMI_BatteryPhysicalPackage REF Antecedent;

    [ Override("Dependent") ]
    LMI_Battery REF Dependent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PhysicalBatteryContainer"), Association ]
class LMI_PhysicalBatteryContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_Chassis REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_BatteryPhysicalPackage REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_BatterySystemDevice"), Association ]
class LMI_BatterySystemDevice: CIM_SystemDevice
{
    [ Override("GroupComponent") ]
    CIM_ComputerSystem REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_Battery REF PartComponent;
};

/******************************************************************************
 * PCI Devices
 */

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PCIDevice") ]
class LMI_PCIDevice: CIM_PCIDevice
{
    [ Implemented(true), Description("Name of the vendor") ]
    string VendorName;

    [ Implemented(true), Description("Name of the device") ]
    string PCIDeviceName;

    [ Implemented(true), Description("Name of the subsystem vendor") ]
    string SubsystemVendorName;

    [ Implemented(true), Description("Name of the subsystem") ]
    string SubsystemName;

    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("BusNumber") ]
    uint8 BusNumber;

    [ Implemented(true), Override("DeviceNumber") ]
    uint8 DeviceNumber;

    [ Implemented(true), Override("FunctionNumber") ]
    uint8 FunctionNumber;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("VendorID") ]
    uint16 VendorID;

    [ Implemented(true), Override("PCIDeviceID") ]
    uint16 PCIDeviceID;

    [ Implemented(true), Override("SubsystemVendorID") ]
    uint16 SubsystemVendorID;

    [ Implemented(true), Override("SubsystemID") ]
    uint16 SubsystemID;

    [ Implemented(true), Override("RevisionID") ]
    uint8 RevisionID;

    [ Implemented(true), Override("CacheLineSize") ]
    uint8 CacheLineSize;

    [ Implemented(true), Override("CommandRegister") ]
    uint16 CommandRegister;

    [ Implemented(true), Override("ClassCode") ]
    uint8 ClassCode;

    [ Implemented(true), Override("DeviceSelectTiming") ]
    uint16 DeviceSelectTiming;

    [ Implemented(true), Override("ExpansionROMBaseAddress") ]
    uint32 ExpansionROMBaseAddress;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("InterruptPin") ]
    uint16 InterruptPin;

    [ Implemented(true), Override("LatencyTimer") ]
    uint8 LatencyTimer;

    [ Implemented(true), Override("BaseAddress64") ]
    uint64 BaseAddress64[];

    [ Implemented(true), Override("BaseAddress") ]
    uint32 BaseAddress[];

    [ Implemented(true), Override("Capabilities") ]
    uint16 Capabilities[];
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PCIDeviceSystemDevice"), Association ]
class LMI_PCIDeviceSystemDevice: CIM_SystemDevice
{
    [ Override("GroupComponent") ]
    CIM_ComputerSystem REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_PCIDevice REF PartComponent;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PCIBridge") ]
class LMI_PCIBridge: CIM_PCIBridge
{
    [ Implemented(true), Description("Name of the vendor") ]
    string VendorName;

    [ Implemented(true), Description("Name of the device") ]
    string PCIDeviceName;

    [ Implemented(true), Description("Name of the subsystem vendor") ]
    string SubsystemVendorName;

    [ Implemented(true), Description("Name of the subsystem") ]
    string SubsystemName;

    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("BusNumber") ]
    uint8 BusNumber;

    [ Implemented(true), Override("DeviceNumber") ]
    uint8 DeviceNumber;

    [ Implemented(true), Override("FunctionNumber") ]
    uint8 FunctionNumber;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("VendorID") ]
    uint16 VendorID;

    [ Implemented(true), Override("PCIDeviceID") ]
    uint16 PCIDeviceID;

    [ Implemented(true), Override("SubsystemVendorID") ]
    uint16 SubsystemVendorID;

    [ Implemented(true), Override("SubsystemID") ]
    uint16 SubsystemID;

    [ Implemented(true), Override("BridgeType") ]
    uint16 BridgeType;

    [ Implemented(true), Override("RevisionID") ]
    uint8 RevisionID;

    [ Implemented(true), Override("CacheLineSize") ]
    uint8 CacheLineSize;

    [ Implemented(true), Override("CommandRegister") ]
    uint16 CommandRegister;

    [ Implemented(true), Override("SubordinateBusNumber") ]
    uint8 SubordinateBusNumber;

    [ Implemented(true), Override("SecondayBusNumber") ]
    uint8 SecondayBusNumber;

    [ Implemented(true), Override("PrimaryBusNumber") ]
    uint8 PrimaryBusNumber;

    [ Implemented(true), Override("ClassCode") ]
    uint8 ClassCode;

    [ Implemented(true), Override("DeviceSelectTiming") ]
    uint16 DeviceSelectTiming;

    [ Implemented(true), Override("SecondaryStatusRegister") ]
    uint16 SecondaryStatusRegister;

    [ Implemented(true), Override("SecondaryBusDeviceSelectTiming") ]
    uint16 SecondaryBusDeviceSelectTiming;

    [ Implemented(true), Override("ExpansionROMBaseAddress") ]
    uint32 ExpansionROMBaseAddress;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("InterruptPin") ]
    uint16 InterruptPin;

    [ Implemented(true), Override("LatencyTimer") ]
    uint8 LatencyTimer;

    [ Implemented(true), Override("SecondaryLatencyTimer") ]
    uint8 SecondaryLatencyTimer;

    [ Implemented(true), Override("BaseAddress64") ]
    uint64 BaseAddress64[];

    [ Implemented(true), Override("BaseAddress") ]
    uint32 BaseAddress[];

    [ Implemented(true), Override("Capabilities") ]
    uint16 Capabilities[];

    [ Implemented(true), Override("IOBaseUpper16") ]
    uint16 IOBaseUpper16;

    [ Implemented(true), Override("IOLimitUpper16") ]
    uint16 IOLimitUpper16;

    [ Implemented(true), Override("IOBase") ]
    uint8 IOBase;

    [ Implemented(true), Override("IOLimit") ]
    uint8 IOLimit;

    [ Implemented(true), Override("MemoryBase") ]
    uint16 MemoryBase;

    [ Implemented(true), Override("MemoryLimit") ]
    uint16 MemoryLimit;

    [ Implemented(true), Override("PrefetchBaseUpper32") ]
    uint32 PrefetchBaseUpper32;

    [ Implemented(true), Override("PrefetchLimitUpper32") ]
    uint32 PrefetchLimitUpper32;

    [ Implemented(true), Override("PrefetchMemoryBase") ]
    uint16 PrefetchMemoryBase;

    [ Implemented(true), Override("PrefetchMemoryLimit") ]
    uint16 PrefetchMemoryLimit;
};

[ Version("0.2.0"), Provider("cmpi:cmpiLMI_PCIBridgeSystemDevice"), Association ]
class LMI_PCIBridgeSystemDevice: CIM_SystemDevice
{
    [ Override("GroupComponent") ]
    CIM_ComputerSystem REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_PCIBridge REF PartComponent;
};

/******************************************************************************
 * Disks
 */

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskPhysicalPackage") ]
class LMI_DiskPhysicalPackage: CIM_PhysicalPackage
{
    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("PackageType") ]
    uint16 PackageType;

    [ Implemented(true), Override("Tag") ]
    string Tag;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("Model") ]
    string Model;

    [ Implemented(true), Override("SerialNumber") ]
    string SerialNumber;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskPhysicalPackageContainer"), Association ]
class LMI_DiskPhysicalPackageContainer: CIM_Container
{
    [ Override("GroupComponent") ]
    LMI_Chassis REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_DiskPhysicalPackage REF PartComponent;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDrive") ]
class LMI_DiskDrive: CIM_DiskDrive
{
    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("OperationalStatus") ]
    uint16 OperationalStatus[];

    [ Implemented(true), Override("EnabledState") ]
    uint16 EnabledState;

    [ Implemented(true), Override("FormFactor") ]
    uint16 FormFactor;

    [ Implemented(true), Override("InterconnectSpeed") ]
    uint64 InterconnectSpeed;

    [ Implemented(true), Override("InterconnectType") ]
    uint16 InterconnectType;

    [ Implemented(true), Override("DiskType") ]
    uint16 DiskType;

    [ Implemented(true), Override("RPM") ]
    uint32 RPM;

    [ Implemented(true), Description("Capacity of disk drive, in bytes."),
      Units("Bytes"), PUnit("Byte") ]
    uint64 Capacity;

    [ Implemented(true), Description("Current temperature of disk drive, in degrees Celsius"),
      Units("Celsius"), PUnit("Celsius") ]
    sint16 Temperature;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveRealizes"), Association ]
class LMI_DiskDriveRealizes: CIM_Realizes
{
    [ Override("Antecedent") ]
    LMI_DiskPhysicalPackage REF Antecedent;

    [ Override("Dependent") ]
    LMI_DiskDrive REF Dependent;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveSystemDevice"), Association ]
class LMI_DiskDriveSystemDevice: CIM_SystemDevice
{
    [ Override("GroupComponent") ]
    CIM_ComputerSystem REF GroupComponent;

    [ Override("PartComponent") ]
    LMI_DiskDrive REF PartComponent;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveSoftwareIdentity") ]
class LMI_DiskDriveSoftwareIdentity: CIM_SoftwareIdentity
{
    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("VersionString") ]
    string VersionString;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Classifications") ]
    uint16 Classifications[];

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("Manufacturer") ]
    string Manufacturer;

    [ Implemented(true), Override("IsEntity") ]
    boolean IsEntity;

    [ Implemented(true), Override("IsLargeBuildNumber") ]
    boolean IsLargeBuildNumber;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveElementSoftwareIdentity"), Association ]
class LMI_DiskDriveElementSoftwareIdentity: CIM_ElementSoftwareIdentity
{
    [ Override("Antecedent") ]
    LMI_DiskDriveSoftwareIdentity REF Antecedent;

    [ Override("Dependent") ]
    LMI_DiskDrive REF Dependent;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveATAProtocolEndpoint") ]
class LMI_DiskDriveATAProtocolEndpoint: CIM_ATAProtocolEndpoint
{
    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("Role") ]
    uint16 Role;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("ConnectionType") ]
    uint16 ConnectionType;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveSAPAvailableForElement"), Association ]
class LMI_DiskDriveSAPAvailableForElement: CIM_SAPAvailableForElement
{
    [ Override("AvailableSAP") ]
    LMI_DiskDriveATAProtocolEndpoint REF AvailableSAP;

    [ Override("ManagedElement") ]
    LMI_DiskDrive REF ManagedElement;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveATAPort") ]
class LMI_DiskDriveATAPort: CIM_ATAPort
{
    [ Implemented(true), Override("SystemCreationClassName") ]
    string SystemCreationClassName;

    [ Implemented(true), Override("SystemName") ]
    string SystemName;

    [ Implemented(true), Override("CreationClassName") ]
    string CreationClassName;

    [ Implemented(true), Override("DeviceID") ]
    string DeviceID;

    [ Implemented(true), Override("Caption") ]
    string Caption;

    [ Implemented(true), Override("Description") ]
    string Description;

    [ Implemented(true), Override("ElementName") ]
    string ElementName;

    [ Implemented(true), Override("Name") ]
    string Name;

    [ Implemented(true), Override("InstanceID") ]
    string InstanceID;

    [ Implemented(true), Override("UsageRestriction") ]
    uint16 UsageRestriction;

    [ Implemented(true), Override("PortType") ]
    uint16 PortType;

    [ Implemented(true), Override("MaxSpeed") ]
    uint64 MaxSpeed;

    [ Implemented(true), Override("Speed") ]
    uint64 Speed;
};

[ Version("0.5.0"), Provider("cmpi:cmpiLMI_DiskDriveDeviceSAPImplementation"), Association ]
class LMI_DiskDriveDeviceSAPImplementation: CIM_DeviceSAPImplementation
{
    [ Override("Antecedent") ]
    LMI_DiskDriveATAPort REF Antecedent;

    [ Override("Dependent") ]
    LMI_DiskDriveATAProtocolEndpoint REF Dependent;
};


diff -up openlmi-providers-0.4.2/mof/60_LMI_Service.mof.orig openlmi-providers-0.4.2/mof/60_LMI_Service.mof
--- openlmi-providers-0.4.2/mof/60_LMI_Service.mof.orig	2014-01-08 10:04:52.000000000 +0100
+++ openlmi-providers-0.4.2/mof/60_LMI_Service.mof	2014-01-21 15:20:08.485764928 +0100
@@ -23,25 +23,49 @@
   Provider("cmpi:cmpiLMI_Service") ]
 class LMI_Service: CIM_Service
 {
-    [ Override("StartService") ]
+    [ Override("StartService"),
+      Description("Start (activate) the service.") ]
     uint32 StartService();
 
-    [ Override("StopService") ]
+    [ Override("StopService"),
+      Description("Stop (deactivate) the service.") ]
     uint32 StopService();
 
+    [ Description("Reload configuration of the service.") ]
     uint32 ReloadService();
 
+    [ Description("Restart the service. If the service is "
+                  "not running yet, it will be started.") ]
     uint32 RestartService();
 
+    [ Description("Restart the service if the service is running. "
+                  "This does nothing if the service is not running.") ]
     uint32 TryRestartService();
 
+    [ Description("Equivalent to the TryRestartService() method.") ]
     uint32 CondRestartService();
 
+    [ Description("Reload the service if it supports it. If not, "
+                  "restart the service instead. If the service is not "
+                  "running yet, it will be started.") ]
     uint32 ReloadOrRestartService();
 
+    [ Description("Reload the service if it supports it. If not, "
+                  "restart the service instead. This does nothing if "
+                  "the service is not running.") ]
     uint32 ReloadOrTryRestartService();
 
+    [ Description("Enable the service persistently. The service will start "
+                  "on the next boot of the system. Note that this method "
+                  "does not have the effect of also starting the service "
+                  "being enabled. If this is desired, a separate StartService "
+                  "method call must be invoked for the service.") ]
     uint32 TurnServiceOn();
 
+    [ Description("Disable the service. The service will not start on the "
+                  "next boot of the system. Note that this method does not "
+                  "implicitly stop the service that is being disabled. If "
+                  "this is desired, an additional StopService method call "
+                  "command should be executed afterwards.") ]
     uint32 TurnServiceOff();
 };
